name: "Run Allset Web Tests"
description: "Runs automated end-to-end or integration tests against a given environment."

inputs:
  environment:
    description: "The environment to run against. E.g. 'edge', or 'production'."
    required: true
  test_set:
    description: "The sub-set(directory) of tests to run. Defaults to `tests/workflows` which includes all e2e smoke tests."
    required: false
    default: "tests/workflows"

  package_token:
    description: "The Github packages token to use for private NPM Repos"
    required: true
  repo_token:
    description: "The SSH Deploy Token used to access the private AllsetHQ/web-tests repo"
    required: true
  slack_url:
    description: "The webhook URL to send slack messages notifying test results to."
    required: true

runs:
  using: "composite"

  steps:
    - name: Checkout web-tests
      uses: actions/checkout@v3
      with:
        ssh-key: ${{ inputs.repo_token }}
        repository: AllsetHQ/web-tests

    - name: TEST list 
      run: ls -l .
      shell: bash

    - name: Install NodeJS for Github Actions
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Authenticate with Github Packages
      run: npm set '//npm.pkg.github.com/:_authToken' ${{ inputs.package_token }}
      shell: bash

    - name: Install Dependencies
      run: npm ci
      shell: bash

    - name: Determine Playwright version
      id: playwright-version
      run: echo -n "name=version::$(npm ls @playwright/test --json | jq --raw-output '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Restore cached Playwright browsers
      id: playwright-cache
      uses: actions/cache@v3
      with:
        path: '~/.cache/ms-playwright'
        key: 'playwright-${{ steps.playwright-version.outputs.version }}'
        restore-keys: |
          playwright-

    - name: Install Playwright Browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install chromium webkit
      shell: bash

    - name: Run Tests
      run: npm run test:${{ inputs.environment }} ${{ inputs.test_set }}
      shell: bash

    - name: Save Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Send Slack notification of successful tests
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_FOOTER: ''
        SLACK_COLOR: 'good'
        SLACK_MESSAGE: ':dev::test_tube::done:'
        SLACK_TITLE: 'Smoke Tests'
        SLACK_WEBHOOK: ${{ inputs.slack_url }}

    - name: Send Slack notification of failed tests
      if: failure()
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_FOOTER: ''
        SLACK_COLOR: 'danger'
        SLACK_MESSAGE: ':dev::test_tube::failed:'
        SLACK_TITLE: 'Smoke Tests'
        SLACK_WEBHOOK: ${{ inputs.slack_url }}
